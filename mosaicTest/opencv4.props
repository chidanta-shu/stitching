<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<ImportGroup Label="PropertySheets" />
	<PropertyGroup Label="UserMacros" />
	<PropertyGroup>
 
		<!-- 请把OpenCVRoot属性的值替换为你的OpenCV编译输出的目标目录，它包含x64、x86这样的子目录 -->
		<!-- 只需要修改opencv解压后的路径到\build即可，一经添加属性页之后就不用再配置32/64的debug和Realease了 -->
		<OpenCVRoot>F:\demo\CV410\install</OpenCVRoot>
 
		<!-- 指定INCLUDE路径-->
		<IncludePath>$(OpenCVRoot)\include;\include\opencv;\include\opencv2;$(IncludePath)</IncludePath>
 
		<!-- 指定链接所需lib目录-->
		
		<LibraryPath Condition="'$(Platform)'=='X64'">$(OpenCVRoot)\x64\vc16\lib;$(LibraryPath)</LibraryPath>
 
		<!-- 保证系统处于Debug模式时，可以使用相对路径读取源代码目录下的文件，比如"lena.jpg"而不必是"d:/work/test/test/lena.jpg" -->
		<LocalDebuggerWorkingDirectory>$(ProjectDir)</LocalDebuggerWorkingDirectory>
		<DebuggerFlavor>WindowsLocalDebugger</DebuggerFlavor>
 
		<!-- 让系统PATH临时包含指定的dll目录 -->
		
		<LocalDebuggerEnvironment Condition="'$(Platform)'=='X64'">PATH=%PATH%;$(OpenCVRoot)\x64\vc16\bin</LocalDebuggerEnvironment>
	</PropertyGroup>
 
	<!-- 以下是程序需要加载的lib文件。-->
	<ItemDefinitionGroup>
		<Link Condition="'$(Configuration)'=='Debug'">
			<AdditionalDependencies>opencv_aruco410d.lib;opencv_bgsegm410d.lib;opencv_bioinspired410d.lib;opencv_calib3d410d.lib;opencv_ccalib410d.lib;opencv_core410d.lib;opencv_datasets410d.lib;opencv_dnn410d.lib;opencv_dnn_objdetect410d.lib;opencv_dpm410d.lib;opencv_face410d.lib;opencv_features2d410d.lib;opencv_flann410d.lib;opencv_fuzzy410d.lib;opencv_hfs410d.lib;opencv_highgui410d.lib;opencv_imgcodecs410d.lib;opencv_imgproc410d.lib;opencv_img_hash410d.lib;opencv_line_descriptor410d.lib;opencv_ml410d.lib;opencv_objdetect410d.lib;opencv_optflow410d.lib;opencv_phase_unwrapping410d.lib;opencv_photo410d.lib;opencv_plot410d.lib;opencv_quality410d.lib;opencv_reg410d.lib;opencv_rgbd410d.lib;opencv_saliency410d.lib;opencv_shape410d.lib;opencv_stereo410d.lib;opencv_stitching410d.lib;opencv_structured_light410d.lib;opencv_superres410d.lib;opencv_surface_matching410d.lib;opencv_text410d.lib;opencv_tracking410d.lib;opencv_video410d.lib;opencv_videoio410d.lib;opencv_videostab410d.lib;opencv_xfeatures2d410d.lib;opencv_ximgproc410d.lib;opencv_xobjdetect410d.lib;opencv_xphoto410d.lib;opencv_gapi410d.lib;opencv_hdf410d.lib;%(AdditionalDependencies)</AdditionalDependencies>
		</Link>
		<Link Condition="'$(Configuration)'=='Release'">
			<AdditionalDependencies>opencv_aruco410.lib;opencv_bgsegm410.lib;opencv_bioinspired410.lib;opencv_calib3d410.lib;opencv_ccalib410.lib;opencv_core410.lib;opencv_datasets410.lib;opencv_dnn410.lib;opencv_dnn_objdetect410.lib;opencv_dpm410.lib;opencv_face410.lib;opencv_features2d410.lib;opencv_flann410.lib;opencv_fuzzy410.lib;opencv_hfs410.lib;opencv_highgui410.lib;opencv_imgcodecs410.lib;opencv_imgproc410.lib;opencv_img_hash410.lib;opencv_line_descriptor410.lib;opencv_ml410.lib;opencv_objdetect410.lib;opencv_optflow410.lib;opencv_phase_unwrapping410.lib;opencv_photo410.lib;opencv_plot410.lib;opencv_quality410.lib;opencv_reg410.lib;opencv_rgbd410.lib;opencv_saliency410.lib;opencv_shape410.lib;opencv_stereo410.lib;opencv_stitching410.lib;opencv_structured_light410.lib;opencv_superres410.lib;opencv_surface_matching410.lib;opencv_text410.lib;opencv_tracking410.lib;opencv_video410.lib;opencv_videoio410.lib;opencv_videostab410.lib;opencv_xfeatures2d410.lib;opencv_ximgproc410.lib;opencv_xobjdetect410.lib;opencv_xphoto410.lib;opencv_gapi410.lib;opencv_hdf410.lib;%(AdditionalDependencies)</AdditionalDependencies>
		</Link>
	</ItemDefinitionGroup>
	<ItemGroup />
</Project>
